{"version":3,"file":"database.js","sourceRoot":"","sources":["../../src/database.ts"],"names":[],"mappings":"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","sourcesContent":["import { AqlLiteral, AqlQuery, isAqlLiteral, isAqlQuery } from \"./aql-query\";\nimport {\n  ArangoCollection,\n  DocumentCollection,\n  EdgeCollection,\n  constructCollection,\n  isArangoCollection\n} from \"./collection\";\nimport { Config, Connection } from \"./connection\";\n\nimport { ArrayCursor } from \"./cursor\";\nimport { Graph } from \"./graph\";\nimport { Route } from \"./route\";\nimport { btoa } from \"./util/btoa\";\nimport { toForm } from \"./util/multipart\";\n\nfunction colToString(collection: string | ArangoCollection): string {\n  if (isArangoCollection(collection)) {\n    return String(collection.name);\n  } else return String(collection);\n}\n\nexport type CollectionName =\n  | string\n  | { isArangoCollection: true; name: string };\nexport type TransactionCollections = {\n  write?: CollectionName | CollectionName[];\n  read?: CollectionName | CollectionName[];\n};\nexport type TrCols = CollectionName | CollectionName[] | TransactionCollections;\n\nexport type ServiceOptions = {\n  [key: string]: any;\n  configuration?: { [key: string]: any };\n  dependencies?: { [key: string]: any };\n};\n\nexport class Database {\n  private _api: Route;\n  private _connection: Connection;\n\n  constructor(config?: Config) {\n    this._connection = new Connection(config);\n    this._api = this._connection.route(\"/_api\");\n    this.useBasicAuth();\n  }\n\n  get name(): string | null {\n    return this._connection.getDatabaseName() || null;\n  }\n\n  route(path?: string, headers?: Object) {\n    return this._connection.route(path, headers);\n  }\n\n  async acquireHostList() {\n    if (!this._connection.getDatabaseName()) {\n      throw new Error(\"Cannot acquire host list with absolute URL\");\n    }\n    const res = await this._api.request({\n      path: \"/_api/cluster/endpoints\"\n    });\n    const urls: string[] = res.body.endpoints.map(\n      (endpoint: any) => endpoint.endpoint\n    );\n    this._connection.addToHostList(urls);\n  }\n\n  // Database manipulation\n\n  useDatabase(databaseName: string) {\n    this._connection.setDatabaseName(databaseName);\n    return this;\n  }\n\n  useBearerAuth(token: string) {\n    this._connection.setHeader(\"authorization\", `Bearer ${token}`);\n    return this;\n  }\n\n  useBasicAuth(username: string = \"root\", password: string = \"\") {\n    this._connection.setHeader(\n      \"authorization\",\n      `Basic ${btoa(`${username}:${password}`)}`\n    );\n    return this;\n  }\n\n  async get() {\n    const res = await this._api.get(\"/database/current\");\n    return res.body.result;\n  }\n\n  async createDatabase(databaseName: string, users?: string[]) {\n    const res = await this._api.post(\"/database\", {\n      users,\n      name: databaseName\n    });\n    return res.body;\n  }\n\n  async listDatabases() {\n    const res = await this._api.get(\"/database\");\n    return res.body.result;\n  }\n\n  async listUserDatabases() {\n    const res = await this._api.get(\"/database/user\");\n    return res.body.result;\n  }\n\n  async dropDatabase(databaseName: string) {\n    const res = await this._api.delete(`/database/${databaseName}`);\n    return res.body;\n  }\n\n  // Collection manipulation\n\n  collection(collectionName: string) {\n    return new DocumentCollection(this._connection, collectionName);\n  }\n\n  edgeCollection(collectionName: string) {\n    return new EdgeCollection(this._connection, collectionName);\n  }\n\n  async listCollections(excludeSystem: boolean = true) {\n    const res = await this._api.get(\"/collection\", { excludeSystem });\n    if (this._connection.arangoMajor <= 2) {\n      return res.body.collections;\n    }\n    return res.body.result;\n  }\n\n  async collections(excludeSystem: boolean = true) {\n    const collections = await this.listCollections(excludeSystem);\n    return collections.map((data: any) =>\n      constructCollection(this._connection, data)\n    );\n  }\n\n  async truncate(excludeSystem: boolean = true) {\n    const collections = await this.listCollections(excludeSystem);\n    return await Promise.all(\n      collections.map(async (data: any) => {\n        const res = await this._api.put(`/collection/${data.name}/truncate`);\n        return res.body;\n      })\n    );\n  }\n\n  // Graph manipulation\n\n  graph(graphName: string) {\n    return new Graph(this._connection, graphName);\n  }\n\n  async listGraphs() {\n    const res = await this._api.get(\"/gharial\");\n    return res.body.graphs;\n  }\n\n  async graphs() {\n    const graphs = await this.listGraphs();\n    return graphs.map((data: any) => this.graph(data._key));\n  }\n\n  // Queries\n\n  async transaction(\n    collections: CollectionName | CollectionName[] | TransactionCollections,\n    action: string\n  ): Promise<any>;\n  async transaction(\n    collections: CollectionName | CollectionName[] | TransactionCollections,\n    action: string,\n    params?: any\n  ): Promise<any>;\n  async transaction(\n    collections: CollectionName | CollectionName[] | TransactionCollections,\n    action: string,\n    params?: any,\n    lockTimeout?: number\n  ): Promise<any>;\n  async transaction(\n    collections: CollectionName | CollectionName[] | TransactionCollections,\n    action: string,\n    params?: any,\n    lockTimeout?: number\n  ): Promise<any> {\n    if (typeof params === \"number\") {\n      lockTimeout = params;\n      params = undefined;\n    }\n    if (typeof collections === \"string\") {\n      collections = { write: [collections] };\n    } else if (Array.isArray(collections)) {\n      collections = { write: collections.map(colToString) };\n    } else if (isArangoCollection(collections)) {\n      collections = { write: colToString(collections) };\n    } else if (collections && typeof collections === \"object\") {\n      collections = { ...collections };\n      if (collections.read) {\n        if (!Array.isArray(collections.read)) {\n          collections.read = colToString(collections.read);\n        } else collections.read = collections.read.map(colToString);\n      }\n      if (collections.write) {\n        if (!Array.isArray(collections.write)) {\n          collections.write = colToString(collections.write);\n        } else collections.write = collections.write.map(colToString);\n      }\n    }\n    const res = await this._api.post(\"/transaction\", {\n      collections,\n      action,\n      params,\n      lockTimeout\n    });\n    return res.body.result;\n  }\n\n  async query(query: string | AqlQuery | AqlLiteral): Promise<ArrayCursor>;\n  async query(query: AqlQuery, opts?: any): Promise<ArrayCursor>;\n  async query(\n    query: string | AqlLiteral,\n    bindVars?: any,\n    opts?: any\n  ): Promise<ArrayCursor>;\n  async query(\n    query: string | AqlQuery | AqlLiteral,\n    bindVars?: any,\n    opts?: any\n  ): Promise<ArrayCursor> {\n    if (isAqlQuery(query)) {\n      opts = bindVars;\n      bindVars = query.bindVars;\n      query = query.query;\n    } else if (isAqlLiteral(query)) {\n      query = query.toAQL();\n    }\n    const res = await this._api.post(\"/cursor\", { ...opts, query, bindVars });\n    return new ArrayCursor(this._connection, res.body, res.host);\n  }\n\n  // Function management\n\n  async listFunctions() {\n    const res = await this._api.get(\"/aqlfunction\");\n    return res.body;\n  }\n\n  async createFunction(name: string, code: string) {\n    const res = await this._api.post(\"/aqlfunction\", { name, code });\n    return res.body;\n  }\n\n  async dropFunction(name: string, group: boolean = false) {\n    const res = await this._api.delete(`/aqlfunction/${name}`, { group });\n    return res.body;\n  }\n\n  // Service management\n\n  async listServices() {\n    const res = await this._api.get(\"/foxx\");\n    return res.body;\n  }\n\n  async installService(mount: string, source: any, opts: ServiceOptions = {}) {\n    const { configuration, dependencies, ...qs } = opts;\n    const req = await toForm({\n      configuration,\n      dependencies,\n      source\n    });\n    const res = await this._api.request({\n      method: \"POST\",\n      path: \"/foxx\",\n      body: req.body,\n      isBinary: true,\n      qs: { ...qs, mount },\n      headers: req.headers\n    });\n    return res.body;\n  }\n\n  async upgradeService(mount: string, source: any, opts: ServiceOptions = {}) {\n    const { configuration, dependencies, ...qs } = opts;\n    const req = await toForm({\n      configuration,\n      dependencies,\n      source\n    });\n    const res = await this._api.request({\n      method: \"PATCH\",\n      path: \"/foxx/service\",\n      body: req.body,\n      isBinary: true,\n      qs: { ...qs, mount },\n      headers: req.headers\n    });\n    return res.body;\n  }\n\n  async replaceService(mount: string, source: any, opts: ServiceOptions = {}) {\n    const { configuration, dependencies, ...qs } = opts;\n    const req = await toForm({\n      configuration,\n      dependencies,\n      source\n    });\n    const res = await this._api.request({\n      method: \"PUT\",\n      path: \"/foxx/service\",\n      body: req.body,\n      isBinary: true,\n      qs: { ...qs, mount },\n      headers: req.headers\n    });\n    return res.body;\n  }\n\n  async uninstallService(mount: string, opts: any): Promise<void> {\n    await this._api.delete(\"/foxx/service\", { ...opts, mount });\n  }\n\n  async getService(mount: string) {\n    const res = await this._api.get(\"/foxx/service\", { mount });\n    return res.body;\n  }\n\n  async getServiceConfiguration(mount: string, minimal: boolean = false) {\n    const res = await this._api.get(\"/foxx/configuration\", { mount, minimal });\n    if (!minimal) return res.body;\n    const values: any = {};\n    for (const key of Object.keys(res.body)) {\n      values[key] = res.body[key].current;\n    }\n    return { values };\n  }\n\n  async updateServiceConfiguration(\n    mount: string,\n    cfg: any,\n    minimal: boolean = false\n  ) {\n    const res = await this._api.patch(\"/foxx/configuration\", cfg, {\n      mount,\n      minimal\n    });\n    const result = res.body;\n    if (minimal || !result.values || !result.values.title) {\n      return result;\n    }\n    const res2 = await this.getServiceConfiguration(mount, minimal);\n    const result2 = res2.body;\n    if (result.warnings) {\n      for (const key of Object.keys(result2)) {\n        result2[key].warning = result.warnings[key];\n      }\n    }\n    return result2;\n  }\n\n  async replaceServiceConfiguration(\n    mount: string,\n    cfg: any,\n    minimal: boolean = false\n  ) {\n    const res = await this._api.put(\"/foxx/configuration\", cfg, {\n      mount,\n      minimal\n    });\n    const result = res.body;\n    if (minimal || !result.values || !result.values.title) {\n      return result;\n    }\n    const res2 = await this.getServiceConfiguration(mount, minimal);\n    const result2 = res2.body;\n    if (result.warnings) {\n      for (const key of Object.keys(result2)) {\n        result2[key].warning = result.warnings[key];\n      }\n    }\n    return result2;\n  }\n\n  async getServiceDependencies(mount: string, minimal: boolean = false) {\n    const res = await this._api.get(\"/foxx/dependencies\", { mount, minimal });\n    if (!minimal) return res.body;\n    const values: any = {};\n    for (const key of Object.keys(res.body)) {\n      values[key] = res.body[key].current;\n    }\n    return { values };\n  }\n\n  async updateServiceDependencies(\n    mount: string,\n    cfg: any,\n    minimal: boolean = false\n  ) {\n    const res = await this._api.patch(\"/foxx/dependencies\", cfg, {\n      mount,\n      minimal\n    });\n    const result = res.body;\n    if (minimal || !result.values || !result.values.title) {\n      return result;\n    }\n    const res2 = await this.getServiceDependencies(mount, minimal);\n    const result2 = res2.body;\n    if (result.warnings) {\n      for (const key of Object.keys(result2)) {\n        result2[key].warning = result.warnings[key];\n      }\n    }\n    return result2;\n  }\n\n  async replaceServiceDependencies(\n    mount: string,\n    cfg: { [key: string]: string },\n    minimal: boolean = false\n  ) {\n    const res = await this._api.put(\"/foxx/dependencies\", cfg, {\n      mount,\n      minimal\n    });\n    const result = res.body;\n    if (minimal || !result.values || !result.values.title) {\n      return result;\n    }\n    const res2 = await this.getServiceDependencies(mount, minimal);\n    const result2 = res2.body;\n    if (result.warnings) {\n      for (const key of Object.keys(result2)) {\n        result2[key].warning = result.warnings[key];\n      }\n    }\n    return result2;\n  }\n\n  async enableServiceDevelopmentMode(mount: string) {\n    const res = await this._api.post(\"/foxx/development\", undefined, { mount });\n    return res.body;\n  }\n\n  async disableServiceDevelopmentMode(mount: string) {\n    const res = await this._api.delete(\"/foxx/development\", { mount });\n    return res.body;\n  }\n\n  async listServiceScripts(mount: string) {\n    const res = await this._api.get(\"/foxx/scripts\", { mount });\n    return res.body;\n  }\n\n  async runServiceScript(mount: string, name: string, args: any): Promise<any> {\n    const res = await this._api.post(`/foxx/scripts/${name}`, args, { mount });\n    return res.body;\n  }\n\n  async runServiceTests(mount: string, opts: any): Promise<any> {\n    const res = await this._api.post(\"/foxx/tests\", undefined, {\n      ...opts,\n      mount\n    });\n    return res.body;\n  }\n\n  async getServiceReadme(mount: string): Promise<string | undefined> {\n    const res = await this._api.get(\"/foxx/readme\", { mount });\n    return res.body;\n  }\n\n  async getServiceDocumentation(mount: string): Promise<any> {\n    const res = await this._api.get(\"/foxx/swagger\", { mount });\n    return res.body;\n  }\n\n  async downloadService(mount: string): Promise<Buffer | Blob> {\n    const res = await this._api.request({\n      method: \"POST\",\n      path: \"/foxx/download\",\n      qs: { mount },\n      expectBinary: true\n    });\n    return res.body;\n  }\n\n  async commitLocalServiceState(replace: boolean = false): Promise<void> {\n    await this._api.post(\"/foxx/commit\", undefined, { replace });\n  }\n}\n"]}