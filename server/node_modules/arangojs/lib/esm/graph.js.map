{"version":3,"file":"graph.js","sourceRoot":"","sources":["../../src/graph.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  ArangoCollection,\n  BaseCollection,\n  DocumentHandle,\n  EdgeCollection,\n  Types,\n  isArangoCollection\n} from \"./collection\";\n\nimport { Connection } from \"./connection\";\nimport { Route } from \"./route\";\n\nexport class GraphVertexCollection extends BaseCollection {\n  type = Types.DOCUMENT_COLLECTION;\n\n  graph: Graph;\n\n  private _gharial: Route;\n\n  constructor(connection: Connection, name: string, graph: Graph) {\n    super(connection, name);\n    this.graph = graph;\n    this._gharial = this._api.route(`/gharial/${this.graph.name}/vertex`);\n  }\n\n  protected _documentPath(documentHandle: DocumentHandle) {\n    return `/document/${this._documentHandle(documentHandle)}`;\n  }\n\n  async vertex(documentHandle: DocumentHandle) {\n    const res = await this._gharial.get(\n      `/${this._documentHandle(documentHandle)}`\n    );\n    return res.body.vertex;\n  }\n\n  async save(data: any, opts?: { waitForSync?: boolean }) {\n    const res = await this._gharial.post(this.name, data, opts);\n    return res.body.vertex;\n  }\n\n  async replace(documentHandle: DocumentHandle, newValue: any, opts: any = {}) {\n    const headers: { [key: string]: string } = {};\n    if (typeof opts === \"string\") {\n      opts = { rev: opts };\n    }\n    if (opts.rev) {\n      let rev: string;\n      ({ rev, ...opts } = opts);\n      headers[\"if-match\"] = rev;\n    }\n    const res = await this._gharial.put(\n      `/${this._documentHandle(documentHandle)}`,\n      newValue,\n      opts,\n      headers\n    );\n    return res.body.vertex;\n  }\n\n  async update(documentHandle: DocumentHandle, newValue: any, opts: any = {}) {\n    const headers: { [key: string]: string } = {};\n    if (typeof opts === \"string\") {\n      opts = { rev: opts };\n    }\n    if (opts.rev) {\n      let rev: string;\n      ({ rev, ...opts } = opts);\n      headers[\"if-match\"] = rev;\n    }\n    const res = await this._gharial.patch(\n      `/${this._documentHandle(documentHandle)}`,\n      newValue,\n      opts,\n      headers\n    );\n    return res.body.vertex;\n  }\n\n  async remove(documentHandle: DocumentHandle, opts: any = {}) {\n    const headers: { [key: string]: string } = {};\n    if (typeof opts === \"string\") {\n      opts = { rev: opts };\n    }\n    if (opts.rev) {\n      let rev: string;\n      ({ rev, ...opts } = opts);\n      headers[\"if-match\"] = rev;\n    }\n    const res = await this._gharial.delete(\n      `/${this._documentHandle(documentHandle)}`,\n      opts,\n      headers\n    );\n    return res.body.removed;\n  }\n}\n\nexport class GraphEdgeCollection extends EdgeCollection {\n  type = Types.EDGE_COLLECTION;\n\n  graph: Graph;\n\n  private _gharial: Route;\n\n  constructor(connection: Connection, name: string, graph: Graph) {\n    super(connection, name);\n    this.type = Types.EDGE_COLLECTION;\n    this.graph = graph;\n    this._gharial = this._api.route(`/gharial/${this.graph.name}/edge`);\n  }\n\n  async edge(documentHandle: DocumentHandle) {\n    const res = await this._gharial.get(\n      `/${this._documentHandle(documentHandle)}`\n    );\n    return res.body.graph;\n  }\n\n  async save(data: any, opts?: { waitForSync?: boolean }): Promise<any>;\n  async save(\n    data: any,\n    fromId: DocumentHandle,\n    toId: DocumentHandle,\n    opts?: { waitForSync?: boolean }\n  ): Promise<any>;\n  async save(\n    data: any,\n    fromId?: DocumentHandle | any,\n    toId?: DocumentHandle,\n    opts?: { waitForSync?: boolean }\n  ) {\n    if (fromId !== undefined) {\n      if (toId !== undefined) {\n        data._from = this._documentHandle(fromId);\n        data._to = this._documentHandle(toId!);\n      } else {\n        opts = fromId;\n      }\n    }\n    const res = await this._gharial.post(this.name, data, opts);\n    return res.body.edge;\n  }\n\n  async replace(documentHandle: DocumentHandle, newValue: any, opts: any = {}) {\n    const headers: { [key: string]: string } = {};\n    if (typeof opts === \"string\") {\n      opts = { rev: opts };\n    }\n    if (opts.rev) {\n      let rev: string;\n      ({ rev, ...opts } = opts);\n      headers[\"if-match\"] = rev;\n    }\n    const res = await this._gharial.put(\n      `/${this._documentHandle(documentHandle)}`,\n      newValue,\n      opts,\n      headers\n    );\n    return res.body.edge;\n  }\n\n  async update(documentHandle: DocumentHandle, newValue: any, opts: any = {}) {\n    const headers: { [key: string]: string } = {};\n    if (typeof opts === \"string\") {\n      opts = { rev: opts };\n    }\n    if (opts.rev) {\n      let rev: string;\n      ({ rev, ...opts } = opts);\n      headers[\"if-match\"] = rev;\n    }\n    const res = await this._gharial.patch(\n      `/${this._documentHandle(documentHandle)}`,\n      newValue,\n      opts,\n      headers\n    );\n    return res.body.edge;\n  }\n\n  async remove(documentHandle: DocumentHandle, opts: any = {}) {\n    const headers: { [key: string]: string } = {};\n    if (typeof opts === \"string\") {\n      opts = { rev: opts };\n    }\n    if (opts.rev) {\n      let rev: string;\n      ({ rev, ...opts } = opts);\n      headers[\"if-match\"] = rev;\n    }\n    const res = await this._gharial.delete(\n      `/${this._documentHandle(documentHandle)}`,\n      opts,\n      headers\n    );\n    return res.body.removed;\n  }\n}\n\nexport class Graph {\n  name: string;\n\n  private _connection: Connection;\n  private _api: Route;\n  private _gharial: Route;\n\n  constructor(connection: Connection, name: string) {\n    this.name = name;\n    this._connection = connection;\n    this._api = this._connection.route(\"/_api\");\n    this._gharial = this._api.route(`/gharial/${this.name}`);\n  }\n\n  async get() {\n    const res = await this._gharial.get();\n    return res.body.graph;\n  }\n\n  async create(properties: any = {}, opts?: { waitForSync?: boolean }) {\n    const res = await this._api.post(\n      \"/gharial\",\n      {\n        ...properties,\n        name: this.name\n      },\n      opts\n    );\n    return res.body.graph;\n  }\n\n  async drop(dropCollections: boolean = false) {\n    const res = await this._gharial.delete({ dropCollections });\n    return res.body.removed;\n  }\n\n  vertexCollection(collectionName: string) {\n    return new GraphVertexCollection(this._connection, collectionName, this);\n  }\n\n  async listVertexCollections(opts?: { excludeOrphans?: boolean }) {\n    const res = await this._gharial.get(\"/vertex\", opts);\n    return res.body.collections;\n  }\n\n  async vertexCollections(opts?: { excludeOrphans?: boolean }) {\n    const names = await this.listVertexCollections(opts);\n    return names.map(\n      (name: any) => new GraphVertexCollection(this._connection, name, this)\n    );\n  }\n\n  async addVertexCollection(collection: string | ArangoCollection) {\n    if (isArangoCollection(collection)) {\n      collection = collection.name;\n    }\n    const res = await this._gharial.post(\"/vertex\", {\n      collection\n    });\n    return res.body.graph;\n  }\n\n  async removeVertexCollection(\n    collection: string | ArangoCollection,\n    dropCollection: boolean = false\n  ) {\n    if (isArangoCollection(collection)) {\n      collection = collection.name;\n    }\n    const res = await this._gharial.delete(`/vertex/${collection}`, {\n      dropCollection\n    });\n    return res.body.graph;\n  }\n\n  edgeCollection(collectionName: string) {\n    return new GraphEdgeCollection(this._connection, collectionName, this);\n  }\n\n  async listEdgeCollections() {\n    const res = await this._gharial.get(\"/edge\");\n    return res.body.collections;\n  }\n\n  async edgeCollections() {\n    const names = await this.listEdgeCollections();\n    return names.map(\n      (name: any) => new GraphEdgeCollection(this._connection, name, this)\n    );\n  }\n\n  async addEdgeDefinition(definition: any) {\n    const res = await this._gharial.post(\"/edge\", definition);\n    return res.body.graph;\n  }\n\n  async replaceEdgeDefinition(definitionName: string, definition: any) {\n    const res = await this._gharial.put(`/edge/${definitionName}`, definition);\n    return res.body.graph;\n  }\n\n  async removeEdgeDefinition(\n    definitionName: string,\n    dropCollection: boolean = false\n  ) {\n    const res = await this._gharial.delete(`edge/${definitionName}`, {\n      dropCollection\n    });\n    return res.body.graph;\n  }\n\n  async traversal(startVertex: DocumentHandle, opts: any) {\n    const res = await this._api.post(\"/traversal\", {\n      ...opts,\n      startVertex,\n      graphName: this.name\n    });\n    return res.body.result;\n  }\n}\n"]}