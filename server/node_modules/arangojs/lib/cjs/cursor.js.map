{"version":3,"file":"cursor.js","sourceRoot":"","sources":["../../src/cursor.ts"],"names":[],"mappings":"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","sourcesContent":["import { Connection } from \"./connection\";\nimport { Route } from \"./route\";\n\nexport class ArrayCursor {\n  extra: any;\n  count: number;\n\n  private _connection: Connection;\n  private _api: Route;\n  private _result: any;\n  private _hasMore: boolean;\n  private _id: string;\n  private _host?: number;\n\n  constructor(connection: Connection, body: any, host?: number) {\n    this.extra = body.extra;\n    this._connection = connection;\n    this._api = this._connection.route(\"/_api\");\n    this._result = body.result;\n    this._hasMore = Boolean(body.hasMore);\n    this._id = body.id;\n    this._host = host;\n    this.count = body.count;\n  }\n\n  private async _drain(): Promise<ArrayCursor> {\n    await this._more();\n    if (!this._hasMore) return this;\n    return this._drain();\n  }\n\n  private async _more() {\n    if (!this._hasMore) return;\n    else {\n      const res = await this._api.request({\n        method: \"PUT\",\n        path: `/cursor/${this._id}`,\n        host: this._host\n      });\n      this._result.push(...res.body.result);\n      this._hasMore = res.body.hasMore;\n    }\n  }\n\n  async all() {\n    await this._drain();\n    let result = this._result;\n    this._result = [];\n    return result;\n  }\n\n  async next(): Promise<any | undefined> {\n    while (!this._result.length && this._hasMore) {\n      await this._more();\n    }\n    if (!this._result.length) {\n      return undefined;\n    }\n    return this._result.shift();\n  }\n\n  hasNext() {\n    return Boolean(this._hasMore || this._result.length);\n  }\n\n  async each(\n    fn: (value: any, index: number, self: ArrayCursor) => boolean | void\n  ): Promise<boolean> {\n    let index = 0;\n    while (this._result.length || this._hasMore) {\n      let result;\n      while (this._result.length) {\n        result = fn(this._result.shift(), index, this);\n        index++;\n        if (result === false) return result;\n      }\n      if (this._hasMore) await this._more();\n    }\n    return true;\n  }\n\n  async every(\n    fn: (value: any, index: number, self: ArrayCursor) => boolean\n  ): Promise<boolean> {\n    let index = 0;\n    while (this._result.length || this._hasMore) {\n      let result;\n      while (this._result.length) {\n        result = fn(this._result.shift(), index, this);\n        index++;\n        if (!result) return false;\n      }\n      if (this._hasMore) await this._more();\n    }\n    return true;\n  }\n\n  async some(\n    fn: (value: any, index: number, self: ArrayCursor) => boolean\n  ): Promise<boolean> {\n    let index = 0;\n    while (this._result.length || this._hasMore) {\n      let result;\n      while (this._result.length) {\n        result = fn(this._result.shift(), index, this);\n        index++;\n        if (result) return true;\n      }\n      if (this._hasMore) await this._more();\n    }\n    return false;\n  }\n\n  async map<T>(\n    fn: (value: any, index: number, self: ArrayCursor) => T\n  ): Promise<T[]> {\n    let index = 0;\n    let result: any[] = [];\n    while (this._result.length || this._hasMore) {\n      while (this._result.length) {\n        result.push(fn(this._result.shift(), index, this));\n        index++;\n      }\n      if (this._hasMore) await this._more();\n    }\n    return result;\n  }\n\n  async reduce<T>(\n    fn: (accu: T, value: any, index: number, self: ArrayCursor) => T,\n    accu?: T\n  ): Promise<T | undefined> {\n    let index = 0;\n    if (accu === undefined) {\n      if (!this._result.length && !this._hasMore) {\n        await this._more();\n      }\n      accu = this._result.shift();\n      index += 1;\n    }\n    while (this._result.length || this._hasMore) {\n      while (this._result.length) {\n        accu = fn(accu!, this._result.shift(), index, this);\n        index++;\n      }\n      if (this._hasMore) await this._more();\n    }\n    return accu;\n  }\n}\n"]}